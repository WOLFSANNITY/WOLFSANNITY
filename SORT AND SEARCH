INSERT

for(int i=1;i<n;i++)
		{
			key = list[i];
			j = i-1;
			while(j>=0 && j>list[key])
			{
				list[j+1]=list[j];
				j--;
			}
                        list[j+1]=key;
		}
		



----------------------------------------------------

BINARY

search(int key)
	{
		int low = 0, high = n-1, mid;
		
		while(low<=high)
		{
			mid = (low+high)/2;
			if(list[mid] == key)
			{
				cout<<"Element found at"<<" "<<mid+1;

				return 1;}
			
			if(list[mid]<key)
			{
				low = mid + 1;
			}
			else
			{
				high = mid - 1;
			}
		}
		return 0;

		
	}
-----------------------------------------------------


BUBBLE


		for(int i=0;i<n-1;i++)
		{
			for(int j=0;j<n-i-1;j++)
			{
				temp = list[j];
				list [j]= list[j+1];
				list[j+1]=temp;
			}
		}
----------------------------------------------------

SELECT

for(int i=0;i<n-1;i++)
		{small = i;
			for(int j=i+1;j<n;j++)
			{
				if(list[small]>list[j])
				{small=j;}
			}
			if(small != i)
			{
				temp = list[i];
				list[i]= list[small];
				list[small]=temp;
			}
		}
-----------------------------------------------------

