#include <stdio.h>

// Function prototypes
void encrypt(char input[], int shift);
void decrypt(char input[], int shift);
void login();


int main() {
    char input[200];
    int choice, shift;
    
    login();
	
    while (1) {
        printf("1- Encrypt\n2- Decrypt\n3- Terminate\nEnter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter message: ");
                scanf(" %[^\n]", input);  // Read the whole line, including spaces
                printf("Enter shift value: ");
                scanf("%d", &shift);
                encrypt(input, shift);
                break;
            case 2:
                printf("Enter message: ");
                scanf(" %[^\n]", input);  // Read the whole line, including spaces
                printf("Enter shift value: ");
                scanf("%d", &shift);
                decrypt(input, shift);
                break;
            case 3:
                return 0;
            default:
                printf("Invalid output\n");
                break;
        }
    }
}

void login()
{
	//username and password can be changed by first changing the no of each character(ie m for password and n for username) and changing the letters in the password and username 1D array. 
	int m = 4;
    int n = 4;
    char password[4] = {'p','a','s','s'};
    char username[4] = {'u','s','e','r'};
    char user[n];
    char pass[m];
    int c, i;
    do {
        printf("Enter username:");
        for (i = 0; i < n; i++)
            scanf(" %c", &user[i]);
        printf("\nEnter password:");
        for (i = 0; i < m; i++)
            scanf(" %c", &pass[i]);
        c = 1;
        for (i = 0; i < m; i++)
         {
            if (password[i] != pass[i]) {
                c = 0;
                break;
            }
        }
    } while (c != 1);
    printf("Login successfull\n");
    printf("\nWelcome ");
    for (i=0;i<n;i++)
    {
		printf("%c",user[i]);
	}
	printf("\n");
}
	
	

void decrypt(char input[], int shift)
{
	int i = 0;

    while (input[i] != '\0') 
    {
        if (input[i] >= 'a' && input[i] <= 'z') 
        {
            input[i] = 'a' + (input[i] - 'a' + (26 - shift)) % 26;
        }
        else if (input[i] >= 'A' && input[i] <= 'Z') 
        {
            input[i] = 'A' + (input[i] - 'A' + (26 - shift)) % 26;
        } 
        else if (input[i] >= '1' && input[i] <= '9') 
        {
            input[i] = '1' + (input[i] - '1' + (10 - shift)) % 10;
        }
        i++;
    }

    printf("Decrypted message: %s\n", input);
}

void encrypt(char input[], int shift)
{
    int i = 0;

    while (input[i] != '\0')
    {
        if (input[i] >= 'a' && input[i] <= 'z')
        {
            input[i] = 'a' + (input[i] - 'a' + shift) % 26;
        }
        else if(input[i] >= 'A' && input[i] <= 'Z')
        {
            input[i] = 'A' + (input[i] - 'A' + shift) % 26;
        }
        else if(input[i] >= '0' && input[i] <= '9')
        {
            input[i] = '0' + (input[i] - '0' + shift) % 10;
        }
        i++;
    }

    printf("Encrypted message: %s\n", input);
}
